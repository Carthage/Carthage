import Foundation
import carthage

// this file was generated by Xcode-Better-Refactor-Tools
// https://github.com/tjarratt/xcode-better-refactor-tools

final class FakeFileManager: FileManager {
	init() {
		self.set_currentDirectoryPathArgs = []
	}

	private var _currentDirectoryPath: String?
	private var set_currentDirectoryPathArgs: Array<String>


	var currentDirectoryPath: String {
		get {
			return _currentDirectoryPath!
		}

		set {
			_currentDirectoryPath = newValue
			set_currentDirectoryPathArgs.append(newValue)
		}
	}

	func setCurrentDirectoryPathCallCount() -> Int {
		return set_currentDirectoryPathArgs.count
	}

	func setCurrentDirectoryPathArgsForCall(index: Int) throws -> String {
		if index < 0 || index >= set_currentDirectoryPathArgs.count {
			throw NSError.init(domain: "swift-generate-fake-domain", code: 1, userInfo: nil)
		}
		return set_currentDirectoryPathArgs[index]
	}

	private(set) var fileExistsAtPathCallCount: Int = 0
	var fileExistsAtPathStub: (String -> Bool)?
	private var fileExistsAtPathArgs: Array<(String)> = []
	func fileExistsAtPathReturns(stubbedValues: (Bool)) {
		self.fileExistsAtPathStub = {(path: String) -> (Bool) in
			return stubbedValues
		}
	}
	func fileExistsAtPathArgsForCall(callIndex: Int) -> (String) {
		return self.fileExistsAtPathArgs[callIndex]
	}
	func fileExistsAtPath(path: String) -> (Bool) {
		self.fileExistsAtPathCallCount += 1
		self.fileExistsAtPathArgs.append(path)
		return self.fileExistsAtPathStub!(path)
	}

	static func reset() {
	}
}
