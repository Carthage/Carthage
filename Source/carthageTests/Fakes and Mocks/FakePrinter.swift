import carthage

// this file was generated by Xcode-Better-Refactor-Tools
// https://github.com/tjarratt/xcode-better-refactor-tools

final class FakePrinter: Printer {
	init() {
	}

	private(set) var barePrintlnCallCount: Int = 0
	func println() {
		self.printlnCallCount += 1
	}

	private(set) var printlnCallCount: Int = 0
	private var printlnArgs: Array<Any> = []
	func printlnArgsForCall(callIndex: Int) -> Any {
		return self.printlnArgs[callIndex]
	}
	func println(object: Any) {
		self.printlnCallCount += 1
		self.printlnArgs.append(object)
	}

	private(set) var printCallCount: Int = 0
	private var printArgs: Array<Any> = []
	func printArgsForCall(callIndex: Int) -> Any {
		return self.printArgs[callIndex]
	}
	func print(object: Any) {
		self.printCallCount++
		self.printArgs.append(object)
	}

	static func reset() {
	}
}
